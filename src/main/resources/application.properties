# 默认的 8080 我们将它改成 9090
 server.port=8877
# 未定义上下文路径之前 地址是 http://localhost:8080 定义了后 http://localhost:9090/chapter1 你能在tomcat做的事情，配置文件都可以
#server.servlet.context-path=/chapter1

# mysql
spring.datasource.url=jdbc:mysql://localhost:3306/ssh?characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=113506
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

#spring.datasource.type
# JPA配置
spring.jpa.hibernate.ddl-auto=update
#方言
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
# 输出日志
spring.jpa.show-sql=true
# 数据库类型
spring.jpa.database=mysql
#懒加载默认为true
spring.jpa.open-in-view=true

#springboot自带的icon
spring.mvc.favicon.enabled=false
#热部署生效
spring.devtools.restart.enabled=false
# 热部署配置监听重启目录
spring.devtools.restart.additional-paths=src/main/java,src/main/resources
#排除那个目录的文件不需要restart
#spring.devtools.restart.exclude = static/**,public/**

#Ctrl+Shift+F9 重新加载
spring.thymeleaf.cache=false
#freemarker热部署
spring.freemarker.cache=false
spring.freemarker.settings.template_update_delay=0
#==================== 日志配合·标准  ============================
logging.config=classpath:logback-spring.xml
#设定ftl文件路径
spring.freemarker.template-loader-path=classpath:/templates/
#设定静态文件路径，js,css等  访问时需要加/static 不加默认访问static
#spring.mvc.static-path-pattern=/static/**
#==========================测试可以 改成true 会自动启动================
spring.auto.openurl=true
spring.web.loginurl=http://localhost:${server.port}/login?username=u1&password=p1
spring.web.googleexcute=C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe

#=====================文件上传======================================
# 是否支持批量上传   (默认值 true)
spring.servlet.multipart.enabled=true
# 上传文件的临时目录 （一般情况下不用特意修改）
spring.servlet.multipart.location=
# 上传文件最大为 1M （默认值 1M 根据自身业务自行控制即可）
spring.servlet.multipart.max-file-size=10MB
# 上传请求最大为 10M（默认值10M 根据自身业务自行控制即可）
spring.servlet.multipart.max-request-size=20MB
# 文件大小阈值，当大于这个阈值时将写入到磁盘，否则存在内存中，（默认值0 一般情况下不用特意修改）
spring.servlet.multipart.file-size-threshold=0

# 判断是否要延迟解析文件（相当于懒加载，一般情况下不用特意修改）
spring.servlet.multipart.resolve-lazily=false




spring.redis.host=localhost
spring.redis.port=6379
spring.redis.password=xiaobu1994
# 连接超时时间（毫秒）
spring.redis.timeout=10000
# Redis默认情况下有16个分片，这里配置具体使用的分片，默认是0
spring.redis.database=0
# 连接池最大连接数（使用负值表示没有限制） 默认 8
spring.redis.lettuce.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
spring.redis.lettuce.pool.max-wait=-1
# 连接池中的最大空闲连接 默认 8
spring.redis.lettuce.pool.max-idle=8
# 连接池中的最小空闲连接 默认 0
spring.redis.lettuce.pool.min-idle=0

# 扫描的包路径,默认扫描所有
spring.swagger.base-package=com.example
# 默认为 true 如果在生产环境中不想用可以在对应的profile下面将它设置为spring.swagger.enabled=false，这样一来接口就不存在暴露的风险
spring.swagger.enabled=true
#设置账户密码登陆
spring.swagger.security.filter-plugin=true
# 配置账号密码
spring.swagger.security.username=admin
spring.swagger.security.password=1
spring.swagger.description=springboot ssh demo

#解决中文乱码
server.tomcat.uri-encoding=UTF-8
spring.http.encoding.force=true
spring.http.encoding.enabled=true
spring.http.encoding.charset=UTF-8
spring.messages.encoding=UTF-8


